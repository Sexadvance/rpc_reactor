/*********************************************************************
* ${FILE_NAME}
* Generated by rocket framework rocket_generator.py
* Don't edit !!!
**********************************************************************/

#include <google/protobuf/service.h>
#include "rocket/common/log.h"
#include "rocket/common/config.h"
#include "rocket/net/tcp/net_addr.h"
#include "rocket/net/tcp/tcp_server.h"
#include "rocket/net/rpc/rpc_dispatcher.h"
#include "../interface/impl.h"

int main(int argc,char* argv[])
{
    if(argc != 2)
    {
        printf("start ${PROJECT_NAME} error, argc != 2\n");
        printf("Sample: ./${PROJECT_NAME} ../conf/config.xml\n");
        return 0;
    }

    rocket::Config::setGlobalConfig(argv[1]);

    rocket::Logger::InitGlobalLogger();

    ////////////////////////////////////////////////////////////////////////////////
    //create and register the service

    std::shared_ptr<Impl> service = std::make_shared<Impl>();
    rocket::RpcDispatcher::GetRpcDispatcher()->registerService(service);

    ////////////////////////////////////////////////////////////////////////////////

    rocket::IPNetAddr::s_ptr addr = std::make_shared<rocket::IPNetAddr>("127.0.0.1",rocket::Config::GetGlobalConfig()->m_port);
    DEBUGLOG("create addr %s",addr->toString().c_str());

    rocket::TcpServer tcp_server(addr);

    tcp_server.start();

    return 0;
}