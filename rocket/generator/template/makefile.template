####################################################
##
## Makefile
## Generated by rocket framework rocket_generator.py
## Create Time: ${CREATE_TIME}
## How to use:
## make clean && make -j4
####################################################

PATH_BIN = ./bin
PATH_MAIN = ./${PROJECT_NAME}

PATH_INTERFACE  = $(PATH_MAIN)/interface
PATH_PB = $(PATH_MAIN)/pb
PATH_COMM = $(PATH_MAIN)/comm
PATH_OBJ = ./obj
PATH_TEST_CLIENT = ./test_client
PATH_TEST_CLIENT_TOOL = $(PATH_TEST_CLIENT)/test_tool

# librocket
# if you have installed librocket.a in another path, please modify it
ROCKET_LIB = /usr/local/lib/librocket.a

# protobuf
# if you have installed libprotobuf.a in another path, please modify it
PROTOBUF_LIB = /usr/local/lib/libprotobuf.a

# tinyxml
# if you have installed libtinyxml.a in another path, please modify it
TINYXML_LIB = /usr/local/lib/libtinyxml.a

# out bin file
TARGET = ./$(PATH_BIN)/${PROJECT_NAME}

CXX := g++
CXX_FLAGS := -g -O3 -std=c++11 -Wall -Wno-deprecated -Wno-unused-but-set-variable
CXX_FLAGS += -I $(PATH_PB) -I $(PATH_MAIN)/${PROJECT_NAME} -I $(PATH_INTERFACE) -I $(PATH_COMM)

LIBS += $(ROCKET_LIB)
LIBS += $(PROTOBUF_LIB) $(TINYXML_LIB)
PB_OBJS := $(patsubst $(PATH_PB)/%.cc, $(PATH_OBJ)/%.o, $(wildcard $(PATH_PB)/*.cc))
INTERFACE_OBJS := $(patsubst $(PATH_INTERFACE)/%.cc, $(PATH_INTERFACE)/%.o, $(wildcard $(PATH_INTERFACE)/*.cc))
COMM_OBJS := $(patsubst $(PATH_COMM)/%.cc, $(PATH_COMM)/%.o, $(wildcard $(PATH_COMM)/*.cc))
TEST_BINS := $(patsubst $(PATH_TEST_CLIENT)/%.cc, $(PATH_TEST_CLIENT_TOOL)/%.o, $(wildcard $(PATH_TEST_CLIENT)/*.cc))

OUT : $(TARGET) $(TETS_BINS)

$(TARGET) : $(PB_OBJS) $(INTERFACE_OBJS) $(COMM_OBJS)
	$(CXX) $(CXX_FLAGS) ./${PROJECT_NAME}/${PROJECT_NAME}/${PROJECT_NAME}.cc -o $@ $^ $(LIBS) -ldl -lpthread

$(PATH_TEST_CLIENT_TOOL)/%: $(PATH_TEST_CLIENT)/%/cc $(PB_OBJS)
	$(CXX) $(CXX_FLAGS) $< -o $@ $(LIBS) $(PB_OBJS) -ldl -lpthread

$(PATH_OBJ)/%.o : $(PATH_PB)/%.cc
	$(CXX) $(CXX_FLAGS) -c $< -o $@

$(PATH_OBJ)/%.o : $(PATH_MAIN)/%.cc
	$(CXX) $(CXX_FLAGS) -c $< -o $@

$(PATH_OBJ)/%.o : $(PATH_INTERFACE)/%.cc
	$(CXX) $(CXX_FLAGS) -c $< -o $@

$(PATH_OBJ)/%.o : $(PATH_COMM)/%.cc
	$(CXX) $(CXX_FLAGS) -c $< -o $@

PRINT-% : ; @echo $* = $($*)

clean:
	rm -f $(PB_OBJS) $(SERVICE_OBJS) $(INTERFACE_OBJS) $(COMM_OBJS) $(TARGET) $(TEST_BINS)
